//	SiPM only - the rest is easy with text editor
#include <stdio.h>


// mod=1...70; con=1...4; proj=0/1; xy=1...5; z=1...17
void SiPM(int mod, int con, int proj, int xy, int z, float dt, float ecoef)
{
	int i;
//		mod chan type proj xy z dt(ns) ecoef(keV)
	for (i=0; i<15; i++) if (z != 17 || ((i%3) != 2)) {
		if (proj) {
			printf("C\t%2d\t%2d\t0\t%d\t%2d\t%d\t%f\t%f\n", mod, (con - 1) * 16 + i, 1, 5*(xy-1) + i/3, 6*(z-1) + 2*(i%3) + 1, dt, ecoef);
		} else {
			printf("C\t%2d\t%2d\t0\t%d\t%2d\t%d\t%f\t%f\n", mod, (con - 1) * 16 + i, 0, 5*(xy-1) + 4 - i/3, 6*(z-1) + 2*(i%3), dt, ecoef);	
		}
	}
}

//	mod=1...70; chan=1...64; proj=0/1; xy=1...5; z=1...5
void PMT(int mod, int chan, int proj, int xy, int z, float dt, float ecoef)
{
	printf("C\t%2d\t%2d\t1\t%d\t%2d\t%d\t%f\t%f\n", mod, chan - 1, proj, xy - 1, z - 1, dt, ecoef);	
}

void VETO(int mod, int chan, float dt, float ecoef)
{
	printf("C\t%2d\t%2d\t2\t0\t0\t0\t%f\t%f\n", mod, chan - 1, dt, ecoef);	
}

int main()
{
//	  mod, chan, proj, xy, z,   dt, ecoef 
	PMT(1,    1,    0,  5, 5, 48.1,  10.0);
	PMT(1,    2,    0,  5, 4, 50.3,  10.0);
	PMT(1,    3,    0,  5, 3, 44.0,  10.0);
	PMT(1,    4,    0,  5, 2, 51.4,  10.0);
	PMT(1,    5,    0,  5, 1, 45.1,  10.0);

	PMT(1,    6,    0,  4, 5, 45.5,  10.0);
	PMT(1,    7,    0,  4, 4, 47.9,  10.0);
	PMT(1,    8,    0,  4, 3, 45.9,  10.0);
	PMT(1,    9,    0,  4, 2, 50.3,  10.0);
	PMT(1,   10,    0,  4, 1, 52.0,  10.0);

	PMT(1,   11,    0,  3, 5, 43.3,  10.0);
	PMT(1,   12,    0,  3, 4, 50.3,  10.0);
	PMT(1,   13,    0,  3, 3, 50.0,  10.0);
	PMT(1,   14,    0,  3, 2, 55.1,  10.0);
	PMT(1,   15,    0,  3, 1, 50.7,  10.0);

	PMT(1,   51,    0,  2, 5, 45.2,  10.0);
	PMT(1,   17,    0,  2, 4, 46.2,  10.0);
	PMT(1,   18,    0,  2, 3, 49.8,  10.0);
	PMT(1,   19,    0,  2, 2, 48.0,  10.0);
	PMT(1,   20,    0,  2, 1, 49.2,  10.0);

	PMT(1,   21,    0,  1, 5, 44.9,  10.0);
	PMT(1,   22,    0,  1, 4, 45.5,  10.0);
	PMT(1,   23,    0,  1, 3, 47.9,  10.0);
	PMT(1,   24,    0,  1, 2, 55.7,  10.0);
	PMT(1,   25,    0,  1, 1, 53.7,  10.0);

	PMT(1,   26,    1,  1, 5, 54.5,  10.0);
	PMT(1,   27,    1,  1, 4, 53.3,  10.0);
	PMT(1,   28,    1,  1, 3, 49.2,  10.0);
	PMT(1,   29,    1,  1, 2, 50.5,  10.0);
	PMT(1,   30,    1,  1, 1, 52.1,  10.0);

	PMT(1,   31,    1,  2, 5, 46.9,  10.0);
	PMT(1,   32,    1,  2, 4, 50.0,  10.0);
	PMT(1,   33,    1,  2, 3, 52.8,  10.0);
	PMT(1,   34,    1,  2, 2, 46.1,  10.0);
	PMT(1,   35,    1,  2, 1, 48.7,  10.0);

	PMT(1,   36,    1,  3, 5, 46.9,  10.0);
	PMT(1,   37,    1,  3, 4, 47.2,  10.0);
	PMT(1,   38,    1,  3, 3, 46.7,  10.0);
	PMT(1,   39,    1,  3, 2, 49.7,  10.0);
	PMT(1,   40,    1,  3, 1, 48.4,  10.0);

	PMT(1,   41,    1,  4, 5, 48.6,  10.0);
	PMT(1,   42,    1,  4, 4, 52.5,  10.0);
	PMT(1,   43,    1,  4, 3, 47.2,  10.0);
	PMT(1,   44,    1,  4, 2, 46.7,  10.0);
	PMT(1,   45,    1,  4, 1, 45.7,  10.0);

	PMT(1,   46,    1,  5, 5, 52.8,  10.0);
	PMT(1,   47,    1,  5, 4, 48.7,  10.0);
	PMT(1,   48,    1,  5, 3, 48.0,  10.0);
	PMT(1,   49,    1,  5, 2, 51.4,  10.0);
	PMT(1,   50,    1,  5, 1, 53.0,  10.0);
//	   mod, chan,   dt, ecoef 
	VETO(3,    1, 45.7,  4.0);
	VETO(3,    2, 50.2,  4.0);
	VETO(3,    3, 42.9,  4.0);
	VETO(3,    4, 47.3,  4.0);
	VETO(3,    5, 80.2,  4.0);
	VETO(3,    6, 42.7,  4.0);
	VETO(3,    7, 111.9,  4.0);
	VETO(3,    8, 44.0,  4.0);

	VETO(3,   17, 44.4,  4.0);
	VETO(3,   18, 47.6,  4.0);
	VETO(3,   19, 45.9,  4.0);
	VETO(3,   20, 45.2,  4.0);
	VETO(3,   21, 42.7,  4.0);
	VETO(3,   22, 40.7,  4.0);
	VETO(3,   23, 39.8,  4.0);
	VETO(3,   24, 42.1,  4.0);
	VETO(3,   25, 40.6,  4.0);
	VETO(3,   26, 42.0,  4.0);
	VETO(3,   27, 42.2,  4.0);
	VETO(3,   28, 45.0,  4.0);
	VETO(3,   29, 46.0,  4.0);
	VETO(3,   30, 46.8,  4.0);
	VETO(3,   31, 46.6,  4.0);
	VETO(3,   32, 45.3,  4.0);
	VETO(3,   33, 41.2,  4.0);
	VETO(3,   34, 45.6,  4.0);
	VETO(3,   35, 42.1,  4.0);
	VETO(3,   36, 39.1,  4.0);
	VETO(3,   37, 40.3,  4.0);
	VETO(3,   38, 41.9,  4.0);
	VETO(3,   39, 43.1,  4.0);
	VETO(3,   40, 45.5,  4.0);
//	  mod, con, proj, xy, z,  dt, ecoef
//		Y
	SiPM(2,   1,    0,  5, 1,  7.4, 4.0);
	SiPM(2,   2,    0,  5, 2,  7.4, 4.0);
	SiPM(2,   3,    0,  5, 3,  7.4, 4.0);
	SiPM(2,   4,    0,  5, 4,  7.4, 4.0);
	SiPM(5,   1,    0,  5, 5,  5.8, 4.0);
	SiPM(5,   2,    0,  5, 6,  5.8, 4.0);
	SiPM(5,   3,    0,  5, 7,  5.8, 4.0);
	SiPM(5,   4,    0,  5, 8,  5.8, 4.0);
	SiPM(6,   1,    0,  5, 9,  4.5, 4.0);
	SiPM(6,   2,    0,  5, 10, 4.5, 4.0);
	SiPM(6,   3,    0,  5, 11, 4.5, 4.0);
	SiPM(6,   4,    0,  5, 12, 4.5, 4.0);
	SiPM(7,   1,    0,  5, 13, 3.6, 4.0);
	SiPM(7,   2,    0,  5, 14, 3.6, 4.0);
	SiPM(7,   3,    0,  5, 15, 3.6, 4.0);
	SiPM(7,   4,    0,  5, 16, 3.6, 4.0);
	SiPM(8,   1,    0,  5, 17, 3.0, 4.0);

	SiPM(8,   2,    0,  4, 1,  3.0, 4.0);
	SiPM(8,   3,    0,  4, 2,  3.0, 4.0);
	SiPM(8,   4,    0,  4, 3,  3.0, 4.0);
	SiPM(9,   1,    0,  4, 4,  2.0, 4.0);
	SiPM(9,   2,    0,  4, 5,  2.0, 4.0);
	SiPM(9,   3,    0,  4, 6,  2.0, 4.0);
	SiPM(9,   4,    0,  4, 7,  2.0, 4.0);
	SiPM(10,  1,    0,  4, 8,  -0.1, 4.0);
	SiPM(10,  2,    0,  4, 9,  -0.1, 4.0);
	SiPM(10,  3,    0,  4, 10, -0.1, 4.0);
	SiPM(10,  4,    0,  4, 11, -0.1, 4.0);
	SiPM(11,  1,    0,  4, 12, -0.7, 4.0);
	SiPM(11,  2,    0,  4, 13, -0.7, 4.0);
	SiPM(11,  3,    0,  4, 14, -0.7, 4.0);
	SiPM(11,  4,    0,  4, 15, -0.7, 4.0);
	SiPM(36,  3,    0,  4, 16, 0.3, 4.0);
	SiPM(36,  4,    0,  4, 17, 0.3, 4.0);

	SiPM(36,  1,    0,  3, 1,  0.3, 4.0);
	SiPM(36,  2,    0,  3, 2,  0.3, 4.0);
	SiPM(35,  1,    0,  3, 3, -2.2, 4.0);
	SiPM(35,  2,    0,  3, 4, -2.2, 4.0);
	SiPM(35,  3,    0,  3, 5, -2.2, 4.0);
	SiPM(35,  4,    0,  3, 6, -2.2, 4.0);
	SiPM(13,  1,    0,  3, 7, -2.6, 4.0);
	SiPM(13,  2,    0,  3, 8, -2.6, 4.0);
	SiPM(13,  3,    0,  3, 9, -2.6, 4.0);
	SiPM(13,  4,    0,  3, 10, -2.6, 4.0);
	SiPM(12,  1,    0,  3, 11, -0.3, 4.0);
	SiPM(12,  2,    0,  3, 12, -0.3, 4.0);
	SiPM(12,  3,    0,  3, 13, -0.3, 4.0);
	SiPM(12,  4,    0,  3, 14, -0.3, 4.0);
	SiPM(16,  1,    0,  3, 15, 4.4, 4.0);
	SiPM(16,  2,    0,  3, 16, 4.4, 4.0);
	SiPM(16,  3,    0,  3, 17, 4.4, 4.0);

	SiPM(16,  4,    0,  2, 1,  4.4, 4.0);
	SiPM(17,  1,    0,  2, 3,  4.4, 4.0);	// !
	SiPM(17,  2,    0,  2, 2,  4.4, 4.0);	// !
	SiPM(17,  3,    0,  2, 4,  4.4, 4.0);
	SiPM(17,  4,    0,  2, 5,  4.4, 4.0);
	SiPM(18,  1,    0,  2, 6,  2.8, 4.0);
	SiPM(18,  2,    0,  2, 7,  2.8, 4.0);
	SiPM(18,  3,    0,  2, 8,  2.8, 4.0);
	SiPM(18,  4,    0,  2, 9,  2.8, 4.0);
	SiPM(19,  1,    0,  2, 10, 1.5, 4.0);
	SiPM(19,  2,    0,  2, 11, 1.5, 4.0);
	SiPM(19,  3,    0,  2, 12, 1.5, 4.0);
	SiPM(19,  4,    0,  2, 13, 1.5, 4.0);
	SiPM(20,  1,    0,  2, 14, 0.6, 4.0);
	SiPM(20,  2,    0,  2, 15, 0.6, 4.0);
	SiPM(20,  3,    0,  2, 16, 0.6, 4.0);
	SiPM(20,  4,    0,  2, 17, 0.6, 4.0);

	SiPM(24,  1,    0,  1, 1, -1.5, 4.0);
	SiPM(24,  2,    0,  1, 2, -1.5, 4.0);
	SiPM(24,  3,    0,  1, 3, -1.5, 4.0);
	SiPM(24,  4,    0,  1, 4, -1.5, 4.0);
	SiPM(23,  1,    0,  1, 5, -1.4, 4.0);
	SiPM(23,  2,    0,  1, 6, -1.4, 4.0);
	SiPM(23,  3,    0,  1, 7, -1.4, 4.0);
	SiPM(23,  4,    0,  1, 8, -1.4, 4.0);
	SiPM(22,  3,    0,  1, 9, -0.3, 4.0);	// !
	SiPM(22,  4,    0,  1, 10, -0.3, 4.0);	// !
	SiPM(22,  1,    0,  1, 11, -0.3, 4.0);	// !
	SiPM(22,  2,    0,  1, 12, -0.3, 4.0);	// !
	SiPM(21,  1,    0,  1, 13, 0.8, 4.0);
	SiPM(21,  2,    0,  1, 14, 0.8, 4.0);
	SiPM(21,  3,    0,  1, 15, 0.8, 4.0);
	SiPM(21,  4,    0,  1, 16, 0.8, 4.0);
	SiPM(25,  1,    0,  1, 17, -2.7, 4.0);
//		X
	SiPM(26,  1,    1,  1, 1, -0.2, 4.0);
	SiPM(26,  2,    1,  1, 2, -0.2, 4.0);
	SiPM(26,  3,    1,  1, 3, -0.2, 4.0);
	SiPM(26,  4,    1,  1, 4, -0.2, 4.0);
	SiPM(27,  1,    1,  1, 5,  3.7, 4.0);
	SiPM(27,  2,    1,  1, 6,  3.7, 4.0);
	SiPM(27,  3,    1,  1, 7,  3.7, 4.0);
	SiPM(27,  4,    1,  1, 8,  3.7, 4.0);
	SiPM(28,  4,    1,  1, 9,  3.8, 4.0);	// !
	SiPM(28,  1,    1,  1, 10, 3.8, 4.0);
	SiPM(28,  2,    1,  1, 11, 3.8, 4.0);
	SiPM(28,  3,    1,  1, 12, 3.8, 4.0);
	SiPM(14,  1,    1,  1, 13, -1.5, 4.0);
	SiPM(14,  2,    1,  1, 14, -1.5, 4.0);
	SiPM(14,  3,    1,  1, 15, -1.5, 4.0);
	SiPM(14,  4,    1,  1, 16, -1.5, 4.0);
	SiPM(33,  1,    1,  1, 17, -2.8, 4.0);

	SiPM(31,  1,    1,  2, 1, -0.8, 4.0);
	SiPM(31,  2,    1,  2, 2, -0.8, 4.0);
	SiPM(31,  3,    1,  2, 3, -0.8, 4.0);
	SiPM(31,  4,    1,  2, 4, -0.8, 4.0);
	SiPM(30,  1,    1,  2, 5, -0.7, 4.0);
	SiPM(30,  2,    1,  2, 6, -0.7, 4.0);
	SiPM(30,  3,    1,  2, 7, -0.7, 4.0);
	SiPM(30,  4,    1,  2, 8, -0.7, 4.0);
	SiPM(29,  4,    1,  2, 9,  1.6, 4.0);	// !
	SiPM(29,  1,    1,  2, 10, 1.6, 4.0);
	SiPM(29,  2,    1,  2, 11, 1.6, 4.0);
	SiPM(29,  3,    1,  2, 12, 1.6, 4.0);
	SiPM(33,  2,    1,  2, 13, -2.8, 4.0);
	SiPM(33,  3,    1,  2, 14, -2.8, 4.0);
	SiPM(33,  4,    1,  2, 15, -2.8, 4.0);
	SiPM(34,  1,    1,  2, 16, -4.1, 4.0);
	SiPM(34,  2,    1,  2, 17, -4.1, 4.0);

	SiPM(42,  1,    1,  3, 1, -1.4, 4.0);
	SiPM(42,  2,    1,  3, 2, -1.4, 4.0);
	SiPM(15,  1,    1,  3, 3,  2.2, 4.0);
	SiPM(34,  3,    1,  3, 4, -4.1, 4.0);
	SiPM(34,  4,    1,  3, 5, -4.1, 4.0);
	SiPM(32,  1,    1,  3, 6, -5.6, 4.0);
	SiPM(32,  2,    1,  3, 7, -5.6, 4.0);
	SiPM(32,  3,    1,  3, 8, -5.6, 4.0);
	SiPM(32,  4,    1,  3, 9, -5.6, 4.0);
	SiPM(15,  2,    1,  3, 10, 2.2, 4.0);
	SiPM(15,  3,    1,  3, 11, 2.2, 4.0);
	SiPM(15,  4,    1,  3, 12, 2.2, 4.0);
	SiPM(38,  3,    1,  3, 13, 2.5, 4.0);
	SiPM(38,  4,    1,  3, 14, 2.5, 4.0);
	SiPM(39,  1,    1,  3, 15, 1.0, 4.0);
	SiPM(39,  2,    1,  3, 16, 1.0, 4.0);
	SiPM(39,  3,    1,  3, 17, 1.0, 4.0);

	SiPM(39,  4,    1,  4, 1,  1.0, 4.0);
	SiPM(40,  1,    1,  4, 2,  0.2, 4.0);
	SiPM(40,  2,    1,  4, 3,  0.2, 4.0);
	SiPM(40,  3,    1,  4, 4,  0.2, 4.0);
	SiPM(40,  4,    1,  4, 5,  0.2, 4.0);
	SiPM(41,  1,    1,  4, 6, -1.0, 4.0);
	SiPM(41,  2,    1,  4, 7, -1.0, 4.0);
	SiPM(41,  3,    1,  4, 8, -1.0, 4.0);
	SiPM(41,  4,    1,  4, 9, -1.0, 4.0);
	SiPM(44,  3,    1,  4, 10, -3.2, 4.0);
	SiPM(44,  4,    1,  4, 11, -3.2, 4.0);
	SiPM(37,  1,    1,  4, 12, -1.5, 4.0);
	SiPM(37,  2,    1,  4, 13, -1.5, 4.0);
	SiPM(37,  3,    1,  4, 14, -1.5, 4.0);
	SiPM(37,  4,    1,  4, 15, -1.5, 4.0);
	SiPM(38,  1,    1,  4, 16, 2.5, 4.0);
	SiPM(38,  2,    1,  4, 17, 2.5, 4.0);

	SiPM(47,  1,    1,  5, 1, -5.3, 4.0);
	SiPM(46,  1,    1,  5, 2, -4.8, 4.0);
	SiPM(46,  2,    1,  5, 3, -4.8, 4.0);
	SiPM(46,  3,    1,  5, 4, -4.8, 4.0);
	SiPM(46,  4,    1,  5, 5, -4.8, 4.0);
	SiPM(45,  1,    1,  5, 6, -5.6, 4.0);
	SiPM(45,  2,    1,  5, 7, -5.6, 4.0);
	SiPM(45,  3,    1,  5, 8, -5.6, 4.0);
	SiPM(45,  4,    1,  5, 9, -5.6, 4.0);
	SiPM(42,  3,    1,  5, 10, -1.4, 4.0);
	SiPM(42,  4,    1,  5, 11, -1.4, 4.0);
	SiPM(43,  1,    1,  5, 12, -2.6, 4.0);
	SiPM(43,  2,    1,  5, 13, -2.6, 4.0);
	SiPM(43,  3,    1,  5, 14, -2.6, 4.0);
	SiPM(43,  4,    1,  5, 15, -2.6, 4.0);
	SiPM(44,  1,    1,  5, 16, -3.2, 4.0);
	SiPM(44,  2,    1,  5, 17, -3.2, 4.0);

	return 0;
}

